name: Acceptance stage

on:
  workflow_call:
    # Map the workflow outputs to job outputs
    inputs:
      triggering-sha:
        required: true
        type: string

env:
  # COVERAGE SETTING VARS
  INTEGRATION_TEST_CLOVER_FILENAME: 'integration-test-clover.xml'
  INTEGRATION_TEST_JUNIT_FILENAME: 'integration-test-junit.xml'
  # ARTIFACTS SETTING VARS
  ARTIFATC_NAME_FOR_INTEGRATION_TESTS_COVERAGE: 'integration-test-coverage-reports-on-SHA'

defaults:
  run:
    shell: bash

jobs:
  integration-test:
    name: Integration test
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    strategy:
      matrix:
        php:
          - '7.4'
        generate-coverage-report: [true]
      fail-fast: true
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: no
          MYSQL_DATABASE: ci-db_test
          MYSQL_USER: ci-db-user
          MYSQL_PASSWORD: ci-db-password
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout on SHA-${{ inputs.triggering-sha }}
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.triggering-sha }}

      - name: Setup PHP
        uses: shivammathur/setup-php@2.35.3
        with:
          php-version: ${{ matrix.php }}
          ini-values: memory_limit=-1
          coverage: none

      - name: Set Composer Cache Directory
        if: ${{ vars.USE_COMPOSER_CACHE }}
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        if: ${{ vars.USE_COMPOSER_CACHE }}
        with:
          path: |
            ${{ steps.composer-cache.outputs.dir }}
            vendor
          key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-composer-

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-progress --no-scripts --ansi

      - name: Run database migrations
        if: ${{ github.ref_name == 'main' }}
        run: ./bin/console doctrine:migrations:migrate -e test -n -vv --allow-no-migration --ansi
        env:
          DATABASE_URL: mysql://ci-db-user:ci-db-password@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/ci-db?serverVersion=8&charset=utf8mb4

      - name: Run database schema update
        if: ${{ github.ref_name != 'main' }}
        run: ./bin/console doctrine:schema:update -e test --force --ansi
        env:
          DATABASE_URL: mysql://ci-db-user:ci-db-password@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/ci-db?serverVersion=8&charset=utf8mb4

      - name: Run integration tests
        run: |
          bin/phpunit --testsuite=integration --testdox --no-interaction --colors=always
        env:
          DATABASE_URL: mysql://ci-db-user:ci-db-password@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/ci-db?serverVersion=8&charset=utf8mb4

      - name: Run unit tests with coverage
        if: ${{ matrix.generate-coverage-report }}
        run: |
          bin/phpunit --testsuite=unit --testdox --no-interaction --colors=always \
          --coverage-clover $INTEGRATION_TEST_CLOVER_FILENAME \
          --log-junit $INTEGRATION_TEST_JUNIT_FILENAME

      - name: Generate Coverage artifact name
        if: ${{ matrix.generate-coverage-report }}
        id: generate-coverage-artifact-name
        run: echo "name=$ARTIFATC_NAME_FOR_INTEGRATION_TESTS_COVERAGE-$GITHUB_SHA" >> $GITHUB_OUTPUT

      - name: Save coverage reports
        if: ${{ matrix.generate-coverage-report }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.generate-coverage-artifact-name.outputs.name }}
          path: |
            ${{ env.INTEGRATION_TEST_CLOVER_FILENAME }}
            ${{ env.INTEGRATION_TEST_JUNIT_FILENAME }}


  functional-test:
    name: Functional test
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: no
          MYSQL_DATABASE: ci-db_test
          MYSQL_USER: ci-db-user
          MYSQL_PASSWORD: ci-db-password
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout on SHA-${{ inputs.triggering-sha }}
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.triggering-sha }}

      - name: Setup PHP
        uses: shivammathur/setup-php@2.35.3
        with:
          php-version: ${{ matrix.php }}
          ini-values: memory_limit=-1
          coverage: none

      - name: Set Composer Cache Directory
        if: ${{ vars.USE_COMPOSER_CACHE }}
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        if: ${{ vars.USE_COMPOSER_CACHE }}
        with:
          path: |
            ${{ steps.composer-cache.outputs.dir }}
            api/vendor
          key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-composer-

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-progress --no-scripts --ansi

      - name: Run database migrations
        if: ${{ github.ref_name == 'main' }}
        run: ./bin/console doctrine:migrations:migrate -e test -n -vv --allow-no-migration --ansi
        env:
          DATABASE_URL: mysql://ci-db-user:ci-db-password@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/ci-db?serverVersion=8&charset=utf8mb4

      - name: Run database schema update
        if: ${{ github.ref_name != 'main' }}
        run: ./bin/console doctrine:schema:update -e test --force --ansi
        env:
          DATABASE_URL: mysql://ci-db-user:ci-db-password@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/ci-db?serverVersion=8&charset=utf8mb4

      - name: Run functional tests
        run: |
          bin/phpunit --testsuite=functional
        env:
          DATABASE_URL: mysql://ci-db-user:ci-db-password@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/ci-db?serverVersion=8&charset=utf8mb4


  acceptance-test:
    name: Behat acceptance test
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: true
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: no
          MYSQL_DATABASE: ci-db_test
          MYSQL_USER: ci-db-user
          MYSQL_PASSWORD: ci-db-password
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout on SHA-${{ inputs.triggering-sha }}
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.triggering-sha }}

      - name: Setup PHP
        uses: shivammathur/setup-php@2.35.3
        with:
          php-version: ${{ matrix.php }}
          ini-values: memory_limit=-1
          coverage: none

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-progress --no-scripts --ansi

      - name: Run database migrations
        if: ${{ github.ref_name == 'main' }}
        run: ./bin/console doctrine:migrations:migrate -e test -n -vv --allow-no-migration --ansi
        env:
          DATABASE_URL: mysql://ci-db-user:ci-db-password@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/ci-db?serverVersion=8&charset=utf8mb4

      - name: Run database schema update
        if: ${{ github.ref_name != 'main' }}
        run: ./bin/console doctrine:schema:update -e test --force --ansi
        env:
          DATABASE_URL: mysql://ci-db-user:ci-db-password@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/ci-db?serverVersion=8&charset=utf8mb4

      - name: Run acceptance tests
        run: |
          vendor/bin/behat
        env:
          DATABASE_URL: mysql://ci-db-user:ci-db-password@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/ci-db?serverVersion=8&charset=utf8mb4
